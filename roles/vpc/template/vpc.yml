---
AWSTemplateFormatVersion: "2010-09-09"
Description: >
  Deploys a 3 tier VPC which includes Subnets.

#-------------------------------------------------------------------------------------------------#
# Parameters                                                                                      #
#-------------------------------------------------------------------------------------------------#
Parameters:
  DnsSupport:
    AllowedValues:
      - true
      - false
    Default: true
    Description: >
      Use AWS Route53 to provide DNS resolution for the VPC.
    Type: String
  DnsHostnames:
    AllowedValues:
      - true
      - false
    Default: false
    Description: >
      Enable AWS Route53 to provide DNS names to instances instead of just IP.
    Type: String

#-------------------------------------------------------------------------------------------------#
# Resources                                                                                       #
#-------------------------------------------------------------------------------------------------#
Resources:
  #-----------------------------------------------------------------------------------------------#
  # Virtual Private Cloud (VPC)                                                                   #
  #-----------------------------------------------------------------------------------------------#  
  Vpc:
    Type: AWS::EC2::VPC
    Properties: 
      CidrBlock: "{{ vpc.cidr }}"
      EnableDnsHostnames: !Ref DnsHostnames
      EnableDnsSupport: !Ref DnsSupport
      InstanceTenancy: default

  #-----------------------------------------------------------------------------------------------#
  # Secure Subnet Tier                                                                            #
  #-----------------------------------------------------------------------------------------------#  
  SecureSubnetA:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone: !Select
        - 0 
        - Fn::GetAZs: !Ref "AWS::Region"
      CidrBlock: "{{ vpc.subnet.secure.a }}"
      Tags:
        - Key: Name
          Value: !Sub "${AWS::StackName}-secure-a"
      VpcId: !Ref Vpc

  SecureSubnetB:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone: !Select
        - 1 
        - Fn::GetAZs: !Ref "AWS::Region"
      CidrBlock: "{{ vpc.subnet.secure.b }}"
      Tags:
        - Key: Name
          Value: !Sub "${AWS::StackName}-secure-b"
      VpcId: !Ref Vpc
      
  SecureSubnetC:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone: !Select
        - 2 
        - Fn::GetAZs: !Ref "AWS::Region"
      CidrBlock: "{{ vpc.subnet.secure.c }}"
      Tags:
        - Key: Name
          Value: !Sub "${AWS::StackName}-secure-c"
      VpcId: !Ref Vpc

  #-----------------------------------------------------------------------------------------------#
  # Private Subnet Tier                                                                           #
  #-----------------------------------------------------------------------------------------------# 
  PrivateSubnetA:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone: !Select
        - 0 
        - Fn::GetAZs: !Ref "AWS::Region"
      CidrBlock: "{{ vpc.subnet.private.a }}"
      Tags:
        - Key: Name
          Value: !Sub "${AWS::StackName}-private-a"
      VpcId: !Ref Vpc

  PrivateSubnetB:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone: !Select
        - 1 
        - Fn::GetAZs: !Ref "AWS::Region"
      CidrBlock: "{{ vpc.subnet.private.b }}"
      Tags:
        - Key: Name
          Value: !Sub "${AWS::StackName}-private-b"
      VpcId: !Ref Vpc
      
  PrivateSubnetC:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone: !Select
        - 2 
        - Fn::GetAZs: !Ref "AWS::Region"
      CidrBlock: "{{ vpc.subnet.private.c }}"
      Tags:
        - Key: Name
          Value: !Sub "${AWS::StackName}-private-c"
      VpcId: !Ref Vpc

  #-----------------------------------------------------------------------------------------------#
  # Public Subnet Tier                                                                            #
  #-----------------------------------------------------------------------------------------------# 
  PublicSubnetA:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone: !Select
        - 0 
        - Fn::GetAZs: !Ref "AWS::Region"
      CidrBlock: "{{ vpc.subnet.public.a }}"
      Tags:
        - Key: Name
          Value: !Sub "${AWS::StackName}-public-a"
      VpcId: !Ref Vpc

  PublicSubnetB:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone: !Select
        - 1 
        - Fn::GetAZs: !Ref "AWS::Region"
      CidrBlock: "{{ vpc.subnet.public.b }}"
      Tags:
        - Key: Name
          Value: !Sub "${AWS::StackName}-public-b"
      VpcId: !Ref Vpc
      
  PublicSubnetC:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone: !Select
        - 2 
        - Fn::GetAZs: !Ref "AWS::Region"
      CidrBlock: "{{ vpc.subnet.public.c }}"
      Tags:
        - Key: Name
          Value: !Sub "${AWS::StackName}-public-c"
      VpcId: !Ref Vpc
      

#-------------------------------------------------------------------------------------------------#
# Outputs                                                                                         #
#-------------------------------------------------------------------------------------------------#
Outputs:
  Vpc:
    Description: Outputs the ID for the VPC
    Value: !Ref Vpc
    Export:
      Name: !Sub "${AWS::StackName}::Vpc"
  VpcCidr:
    Description: Outpus the Cidr for the VPC
    Value: !GetAtt Vpc.CidrBlock
    Export:
      Name: !Sub "${AWS::StackName}::Vpc::CidrBlock"    
  SecureSubnetA:
    Description: Outputs the ID for the Secure Subnet A
    Value: !Ref SecureSubnetA
    Export:
      Name: !Sub "${AWS::StackName}::SecureSubnetA"
  SecureSubnetB:
    Description: Outputs the ID for the Secure Subnet B
    Value: !Ref SecureSubnetB
    Export:
      Name: !Sub "${AWS::StackName}::SecureSubnetB"
  SecureSubnetC:
    Description: Outputs the ID for the Secure Subnet C
    Value: !Ref SecureSubnetC
    Export:
      Name: !Sub "${AWS::StackName}::SecureSubnetC"
  PrivateSubnetA:
    Description: Outputs the ID for the Private Subnet A
    Value: !Ref PrivateSubnetA
    Export:
      Name: !Sub "${AWS::StackName}::PrivateSubnetA"
  PrivateSubnetB:
    Description: Outputs the ID for the Private Subnet B
    Value: !Ref PrivateSubnetB
    Export:
      Name: !Sub "${AWS::StackName}::PrivateSubnetB"
  PrivateSubnetC:
    Description: Outputs the ID for the Private Subnet C
    Value: !Ref PrivateSubnetC
    Export:
      Name: !Sub "${AWS::StackName}::PrivateSubnetC"
  PublicSubnetA:
    Description: Outputs the ID for the Public Subnet A
    Value: !Ref PublicSubnetA
    Export:
      Name: !Sub "${AWS::StackName}::PublicSubnetA"
  PublicSubnetB:
    Description: Outputs the ID for the Public Subnet B
    Value: !Ref PublicSubnetB
    Export:
      Name: !Sub "${AWS::StackName}::PublicSubnetB"
  PublicSubnetC:
    Description: Outputs the ID for the Public Subnet C
    Value: !Ref PublicSubnetC
    Export:
      Name: !Sub "${AWS::StackName}::PublicSubnetC"

